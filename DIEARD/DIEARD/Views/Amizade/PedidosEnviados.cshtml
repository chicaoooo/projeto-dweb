@model List<DIEARD.Models.PedidosAmizade>
@* Esta view renderiza a lista de pedidos de amizade enviados pelo utilizador. *@

@{
    ViewData["Title"] = "Pedidos Enviados";
}

@functions {
    // Função auxiliar para retornar a classe CSS (cor) com base no status do pedido.
    // O prefixo permite reutilizar a função para bordas (border-*) e fundos (bg-*).
    private string GetStatusClass(DIEARD.Models.StatusPedido status, string prefix = "border")
    {
        return status switch
        {
            DIEARD.Models.StatusPedido.Pendente => $"{prefix}-warning",
            DIEARD.Models.StatusPedido.Aceite   => $"{prefix}-success",
            DIEARD.Models.StatusPedido.Recusado => $"{prefix}-danger",
            _                                   => $"{prefix}-secondary" // Status
        };
    }
}

<div class="container">
    <div class="card">
        <div class="card-header">
            <h4 class="mb-0">
                <i class="bi bi-send"></i> Pedidos de Amizade Enviados
            </h4>
        </div>
        <div class="card-body">
            @if (Model.Any())
            {
                <div class="alert alert-info">
                    <i class="bi bi-info-circle"></i>
                    Histórico de <strong>@Model.Count</strong> pedido(s) de amizade enviado(s).
                </div>

                <ul class="list-group">
                    @foreach (var pedido in Model)
                    {
                        // um list-group-item.
                        <li class="list-group-item mb-3 border @GetStatusClass(pedido.Status)">
                            <div class="row align-items-center">
                                <div class="col-md-7">
                                    <div class="d-flex align-items-center mb-2">
                                        <div class="bg-secondary rounded-circle d-flex align-items-center justify-content-center me-3"
                                             style="width: 50px; height: 50px;">
                                            <i class="bi bi-person-fill text-white fs-4"></i>
                                        </div>
                                        <div>
                                            <h6 class="mb-1">@pedido.Destinatario.UserName</h6>
                                            <small class="text-muted">@pedido.Destinatario.Email</small>
                                        </div>
                                    </div>
                                    <div class="mb-2">
                                        <small class="text-muted d-block">
                                            <i class="bi bi-calendar"></i>
                                            Enviado em @pedido.DataPedido.ToString("dd/MM/yyyy às HH:mm")
                                        </small>
                                        @if (pedido.DataResposta.HasValue)
                                        {
                                            <small class="text-muted d-block">
                                                <i class="bi bi-clock"></i>
                                                Respondido em @pedido.DataResposta.Value.ToString("dd/MM/yyyy às HH:mm")
                                            </small>
                                        }
                                    </div>
                                    @if (!string.IsNullOrEmpty(pedido.Mensagem))
                                    {
                                        <div class="alert alert-light p-2 mb-0">
                                            <small><i class="bi bi-chat-quote"></i> <strong>Sua mensagem:</strong> "@pedido.Mensagem"</small>
                                        </div>
                                    }
                                </div>
                                <div class="col-md-5 text-end">
                                   
                                    @switch (pedido.Status)
                                    {
                                        case DIEARD.Models.StatusPedido.Pendente:
                                            <span class="badge fs-6 mb-2 @GetStatusClass(pedido.Status, "bg")">
                                                <i class="bi bi-clock"></i> Pendente
                                            </span>
                                            <form method="post" asp-action="CancelarPedido" class="d-block mt-1">
                                                <input type="hidden" name="pedidoId" value="@pedido.Id" />
                                                <button type="submit" class="btn btn-outline-danger btn-sm"
                                                        onclick="return confirm('Tem certeza que deseja cancelar este pedido?')">
                                                    <i class="bi bi-x"></i> Cancelar Pedido
                                                </button>
                                                @Html.AntiForgeryToken()
                                            </form>
                                            break;

                                        case DIEARD.Models.StatusPedido.Aceite:
                                            <span class="badge fs-6 @GetStatusClass(pedido.Status, "bg")">
                                                <i class="bi bi-check-circle"></i> Aceite
                                            </span>
                                            <div class="text-success mt-1"><small><i class="bi bi-people"></i> Agora são amigos!</small></div>
                                            break;

                                        case DIEARD.Models.StatusPedido.Recusado:
                                            <span class="badge fs-6 @GetStatusClass(pedido.Status, "bg")">
                                                <i class="bi bi-x-circle"></i> Recusado
                                            </span>
                                            <div class="text-muted mt-1"><small><i class="bi bi-info-circle"></i> Pedido foi recusado.</small></div>
                                            break;

                                        case DIEARD.Models.StatusPedido.Cancelado:
                                            <span class="badge fs-6 @GetStatusClass(pedido.Status, "bg")">
                                                <i class="bi bi-slash-circle"></i> Cancelado
                                            </span>
                                            <div class="text-muted mt-1"><small><i class="bi bi-info-circle"></i> Você cancelou este pedido.</small></div>
                                            break;
                                    }
                                </div>
                            </div>
                        </li>
                    }
                </ul>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="bi bi-send text-muted" style="font-size: 4rem;"></i>
                    <h5 class="text-muted mt-3">Nenhum pedido enviado</h5>
                    <p class="text-muted mb-4">Você ainda não enviou pedidos de amizade.</p>
                    <a href="/search?query=" class="btn btn-primary"><i class="bi bi-search"></i> Pesquisar Utilizadores</a>
                    <a href="/Amizade/Index" class="btn btn-outline-secondary"><i class="bi bi-people"></i> Minhas Amizades</a>
                </div>
            }
        </div>
    </div>
</div>

@{
    // Lógica consolidada para exibir a mensagem de alerta.
    var alertMessage = TempData["SuccessMessage"] ?? TempData["ErrorMessage"];
    var isError = TempData["ErrorMessage"] != null;
    
    // Definir as classes CSS
    var alertClass = isError ? "alert-danger" : "alert-success";
    var alertIcon = isError ? "bi-exclamation-triangle-fill" : "bi-check-circle-fill";
}

@if (alertMessage != null)
{
    // Este é o componente Alert do Bootstrap.
    <div class="alert @alertClass alert-dismissible fade show" role="alert">
        <i class="bi @alertIcon me-2"></i>
        @alertMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}